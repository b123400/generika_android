apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
  signingConfigs {
    release
  }

  compileSdkVersion 27
  buildToolsVersion "27.0.3"

  defaultConfig {
    applicationId "org.oddb.generika"
    versionCode 33

    versionName "1.0.33"

    minSdkVersion 16
    targetSdkVersion 27

    // junit4
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  // https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.LintOptions.html#com.android.build.gradle.internal.dsl.LintOptions
  lintOptions {
    // check but allow bulding for warnings
    checkReleaseBuilds true
    abortOnError false
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }

    debug {
      minifyEnabled false
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  applicationVariants.all { variant ->
    variant.resValue "string", "versionName", variant.versionName
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  // -- support:
  // https://developer.android.com/topic/libraries/support-library/packages.html
  implementation 'com.android.support.constraint:constraint-layout:1.0.2'
  implementation 'com.android.support:design:27.1.0'
  implementation 'com.android.support:appcompat-v7:27.1.0'
  implementation 'com.android.support:preference-v7:27.1.0'
  implementation 'com.android.support:preference-v14:27.1.0'
  implementation 'com.android.support:support-v4:27.1.0'
  implementation 'com.android.support:support-v13:27.1.0'
  implementation 'com.android.support:support-core-ui:27.1.0'
  implementation 'com.android.support:support-core-utils:27.1.0'
  implementation 'com.android.support:support-fragment:27.1.0'

  // -- dependency
  implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
  implementation 'com.google.android.gms:play-services-vision:11.8.0'
  implementation 'io.realm:android-adapters:2.1.1'

  // -- testing
  // src/test
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.robolectric:robolectric:3.7.1'
  testImplementation 'org.robolectric:shadows-support-v4:3.0'
  testImplementation 'org.mockito:mockito-core:1.10.19'
  testImplementation 'io.reactivex.rxjava2:rxjava:2.1.5'

  // NOTE:
  // Appearently, Realm and Robolectric don't work together right now :'(
  //
  // - https://github.com/robolectric/robolectric/issues/1389
  // - https://github.com/realm/realm-java/issues/3808

  // src/androidTest
  androidTestImplementation 'com.android.support.test:runner:1.0.1'
  androidTestImplementation 'com.android.support.test:rules:1.0.1'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}


if (project.hasProperty('isTest')) {
  // fix for resource files
  android.applicationVariants.all {variant ->
    def productFlavor = variant.productFlavors[0] != null ? "${variant.productFlavors[0].name.capitalize()}" : ""
    def buildType = "${variant.buildType.name.capitalize()}"
    tasks["compile${productFlavor}${buildType}UnitTestSources"].dependsOn(tasks["merge${productFlavor}${buildType}Assets"])
  }
} else {
  def Properties props = new Properties()
  def propFile = new File('signing.properties')
  if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props!=null &&
      props.containsKey('STORE_FILE') &&
      props.containsKey('STORE_PASSWORD') &&
      props.containsKey('KEY_ALIAS') &&
      props.containsKey('KEY_PASSWORD')) {
      android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
      android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
      android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
      android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
      println 'signing.properties found but some entries are missing'
      android.buildTypes.release.signingConfig = null
    }
  } else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
  }
}
